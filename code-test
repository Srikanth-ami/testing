provider "aws" {
  region      = "ap-south-1"
  access_key  = "AKIAVIM2HAQIZPJPZD5D"
  secret_key  = "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"
}
#Resource: createing vpc  create aws vpc using terraform

resource "aws_vpc" "vpc" {
  cidr_block       = "10.0.0.0/16"
  instance_tenancy = "default"
  enable_dns_support   = true
  enable_dns_hostnames = true

  tags = {
    Name = "A_vpc"
  }
}

#resource: createing subnets

resource "aws_subnet" "pub" {
  vpc_id     = aws_vpc.vpc.id
  cidr_block = "10.0.1.0/24"

  tags = {
    Name = "Public"
  }
}

resource "aws_subnet" "pri" {
  vpc_id     = aws_vpc.vpc.id
  cidr_block = "10.0.2.0/24"

  tags       = {
    Name     = "Private"
  }
}

#Resource: aws_internet_gateway

resource "aws_internet_gateway" "igw" {
  vpc_id = aws_vpc.vpc.id

  tags = {
    Name = "IGW"
  }
}

#Resource: aws_eip

resource "aws_eip" "ip" {
  vpc      = true
  
 tags = {
    Name = "E_IP"
  }
}

#Resource:aws_nat_gateway

resource "aws_nat_gateway" "ngw" {
  allocation_id = aws_eip.ip.id
  subnet_id     = aws_subnet.pri.id

  tags = {
    Name = "NGW"
  }
}

#Resource: aws_route_table

resource "aws_route_table" "rt1" {
  vpc_id = aws_vpc.vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.igw.id
  }

tags = {
    Name = "pub-route"
  }
}

resource "aws_route_table" "rt2" {
  vpc_id = aws_vpc.vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_nat_gateway.ngw.id
  }

tags = {
    Name = "pri-route-main"
  }
}
  
#Resource: aws_route_table_association

resource "aws_route_table_association" "as_1"{
  subnet_id      = aws_subnet.pub.id
  route_table_id = aws_route_table.rt1.id
}
resource "aws_route_table_association" "as_2"{
  subnet_id      = aws_subnet.pri.id
  route_table_id = aws_route_table.rt2.id
}

resource "aws_instance" "server" {
ami     = "ami-0f5ee92e2d63afc18"
instance_type = "t2.small"
subnet_id = aws_subnet.pub.id
vpc_security_group_ids = [aws_security_group.SG.id]
key_name = "PROJECT"

tags ={
  Name = "terraform-server"
  }
}

#Resource: aws_security_group

resource "aws_security_group" "SG" {
  name        = "cust_sg"
  description = "Allow TLS inbound traffic"
  vpc_id      = aws_vpc.vpc.id

  ingress {
    description      = "TLS from VPC"
    from_port        = 22
    to_port          = 22
    protocol         = "tcp"
    cidr_blocks      = [aws_vpc.vpc.cidr_block]
   
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
 
  }

  tags = {
    Name = "cust_sg"
  }
}


